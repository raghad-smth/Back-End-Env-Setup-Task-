{
	"info": {
		"_postman_id": "379876a0-5602-449e-bdc4-fc2c213b5530",
		"name": "Hello World API ",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38378378"
	},
	"item": [
		{
			"name": "http://localhost:8080/hello",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var template = `\r",
							"<style type=\"text/css\">\r",
							"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}\r",
							"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}\r",
							"    .tftable tr {background-color:#ffffff;}\r",
							"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}\r",
							"    .tftable tr:hover {background-color:#e0ffff;}\r",
							"</style>\r",
							"\r",
							"<table class=\"tftable\" border=\"1\">\r",
							"    <tr>\r",
							"        <th>ID</th>\r",
							"        <th>Name</th>\r",
							"        <th>Value</th>\r",
							"    </tr>\r",
							"    \r",
							"    {{#each response}}\r",
							"        <tr>\r",
							"            <td>{{id}}</td>\r",
							"            <td>{{name}}</td>\r",
							"            <td>{{value}}</td>\r",
							"        </tr>\r",
							"    {{/each}}\r",
							"</table>\r",
							"`;\r",
							"\r",
							"function constructVisualizerPayload() {\r",
							"    // The response is plain text, so we need to format it into an array of objects\r",
							"    var responseText = pm.response.text().trim();\r",
							"    var visualizerData = [{\r",
							"        id: 1,\r",
							"        name: \"Greeting\",\r",
							"        value: responseText\r",
							"    }];\r",
							"    \r",
							"    return visualizerData;\r",
							"}\r",
							"\r",
							"pm.visualizer.set(template, constructVisualizerPayload());"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/hello",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"hello"
					]
				},
				"description": "### Endpoint: `GET /hello`\n\nThis endpoint is used to retrieve a simple greeting message. It does not require any input parameters and is designed to return a plain text response.\n\n#### Request Parameters\n\n- **None**: This endpoint does not accept any input parameters.\n    \n\n#### Response Structure\n\n- **Status Code**: `200 OK` - Indicates that the request was successful.\n    \n- **Content-Type**: `text/plain` - The response is returned as plain text.\n    \n- **Response Body**: A string containing the greeting message, e.g., `Hello World`.\n    \n\nThis endpoint is useful for testing connectivity and ensuring that the server is running correctly."
			},
			"response": []
		}
	]
}